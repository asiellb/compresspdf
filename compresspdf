#! /bin/bash
# Shell script to compress pdf using ghostscript lib.
##### Functions
usage() {
    echo -e "\033[1mHelp\033[0m \n
        compresspdf [ -s(--setting) [\033[1mscreen\033[0m|ebook|printer|prepress] -l(--layout) [\033[1mletter\033[0m|a4|legal|prepress] -i(--initial) [initial page] -e(--end) [end page] -g(--gray) -c(--clean)  -f(--file) [file] ] | [ -h [help] ] | [ -u [update] ] \n
    \033[1m**\033[0m Default conversion setting is screen. Use initial and end numbers for splitting pages. \n
Then: \n
- You get the output \033[1mfilename_small.pdf\033[0m \n"
}
compress() {
    gs -sDEVICE=pdfwrite -dNOPAUSE -dQUIET -dBATCH -dPDFSETTINGS=/${setting:-"screen"} -dFitPage -sPAPERSIZE=${layout:-"letter"} -dCompatibilityLevel=1.5 -dSubsetFonts=true -dCompressFonts=true -dEmbedAllFonts=true -dDetectDuplicateImages=true -dColorImageDownsampleType=/Bicubic -dColorImageResolution=300 -dGrayImageDownsampleType=/Bicubic -dGrayImageResolution=300 -dMonoImageDownsampleType=/Bicubic -dMonoImageResolution=300 -dDownsampleColorImages=true -dDoThumbnails=false -dCreateJobTicket=false -dPreserveEPSInfo=false -dPreserveOPIComments=false -dPreserveOverprintSettings=false -dUCRandBGInfo=/Remove ${additionals:-} -sOutputFile="$DST" "$SRC" 2>&1 >/dev/null
}
update() {
    curl -Ls https://git.io/fj98I | bash
    if [[ $? -eq 0 ]]; then
        exit 0
    else
        exit 1
    fi
}
##### Main
for arg in "$@"; do
    shift
    case "$arg" in
    "--help") set -- "$@" "-h" ;;
    "--clean") set -- "$@" "-c" ;;
    "--layout") set -- "$@" "-l" ;;
    "--file") set -- "$@" "-f" ;;
    "--setting") set -- "$@" "-s" ;;
    "--initial") set -- "$@" "-i" ;;
    "--end") set -- "$@" "-e" ;;
    "--gray") set -- "$@" "-g" ;;
    "--update") set -- "$@" "-u" ;;
    "--?") set -- "$@" "-?" ;;
    *) set -- "$@" "$arg" ;;
    esac
done
OPTIND=1
while getopts ":h:l:f:s:i:e:gu?c" opt; do
    case "$opt" in
    "h")
        usage
        exit 0
        ;;
    "c")
        clean=true
        ;;
    "l")
        layout=$OPTARG
        ;;
    "f")
        SRC=$OPTARG
        DST="${SRC%.*}"_small.pdf
        ;;
    "s")
        setting=$OPTARG
        ;;
    "i")
        initial=$OPTARG
        ;;
    "e")
        end=$OPTARG
        ;;
    "g")
        gray=true
        ;;
    "u")
        update
        ;;
    "?")
        usage
        exit 1
        ;;
    *)
        usage
        exit 1
        ;;
    esac
done
shift $(expr $OPTIND - 1)
if [[ ! $SRC ]]; then
    echo -e "\033[1mWarning\033[0m \n
    At least an input file is required to convert! \n
        Use \033[1mcompresspdf -h\033[0m for help. \n"
    exit 1
else
    if [[ -f $SRC ]]; then
        if [[ $initial || $end ]]; then
            if [[ $initial && $end ]]; then
                splitopt=" -dFirstPage=$initial -dLastPage=$end"
            else
                echo -e "\033[1mWarning\033[0m \n
                For split options itÂ´s neccesary both, the [-i (--initial)] and [-e (--end)] pages  to continue! \n
                    Use \033[1mcompresspdf -h\033[0m for help. \n"
                exit 1
            fi
        fi
        if [[ $gray ]]; then
            coloropt=" -sProcessColorModel=DeviceGray -sColorConversionStrategy=Gray -dOverrideICC"
        else
            coloropt=" -sProcessColorModel=DeviceRGB -sColorConversionStrategy=RGB -sColorConversionStrategyForImages=RGB -dConvertCMYKImagesToRGB=true"
        fi
        if [[ $clean ]]; then
            cleanopt=" -dNO_PDFMARK_OUTLINES"
        fi
        if [[ ! $additionals ]]; then
            additionals=$splitopt$coloropt$cleanopt
        else
            additionals=$additionals$splitopt$coloropt$cleanopt
        fi
        compress >/dev/null
        if [ $? -eq 0 ]; then
            echo -e "\033[1mInfo\033[0m \n
        The output file was saved to $DST \n"
            exit 0
        else
            echo -e "\033[1mError\033[0m \n
        \033[1mProblem\033[0m occur with conversion, please try again!! \n"
            exit 1
        fi
    else
        echo -e "\033[1mError\033[0m \n
    File \033[1m$SRC\033[0m to convert not found! \n"
        exit 1
    fi
fi
